generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

enum Pronouns {
  He
  She
  They
  DontSpecify
}

enum Roles {
  SuperAdmin
  Admin
  User
}

enum TokenType {
  PasswordReset
  VerifyEmail
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique(map: "email") @db.VarChar(255)
  username        String    @unique(map: "username") @db.VarChar(255)
  password        String    @db.VarChar(255)
  role            Roles     @default(User)
  email_verified  DateTime? @db.DateTime()
  Profile         Profile?
  Token           Token[]   @relation(map: "Token_ibfk_1")
  Session         Session[] @relation(map: "Session_ibfk_1")
}

model Profile {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  bio       String?   @db.Text
  url       String?   @db.Text
  pronouns  Pronouns?
  gender    Gender?
  userId    Int       @unique(map: "userId")
  User      User      @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "Profile_ibfk_1")
}

model Token {
  token       String    @db.VarChar(66) @unique
  userId      Int       @unique(map: "userId")
  expiresIn   DateTime  @db.DateTime()
  token_type  TokenType
  User        User      @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "Token_ibfk_1")
}

model Session {
  userId        Int       @unique(map: "userId")
  refresh_token String    @db.VarChar(255)
  expiresIn     DateTime  @db.DateTime()
  user_agent    String    @db.Text
  ip_address    String    @db.VarChar(45)
  login_time    DateTime  @db.DateTime()
  User          User      @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "Session_ibfk_1")
}
